name: Reusable Build for Building Python Container Images

on:
  workflow_call:
    inputs:
      image-name:
        description: "Image name"
        required: true
        type: string
      context-path:
        description: "Path to the build context (relative to repository root)"
        required: true
        type: string
      containerfile-path:
        description: 'Path to the Containerfile (relative to context-path, defaults to "Containerfile")'
        required: false
        type: string
        default: "Containerfile"
      platforms:
        description: "Target platforms for the build (comma-separated)"
        required: false
        type: string
        default: "linux/amd64,linux/arm64"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/${{ inputs.image-name }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: ${{ inputs.context-path }}
          file: ${{ inputs.context-path }}/${{ inputs.containerfile-path }}
          platforms: ${{ inputs.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
